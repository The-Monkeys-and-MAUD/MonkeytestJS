/*! quintrunner - v0.1.0 - 2013-07-24 */ 
!function(a){a.QUnit.config.autostart=!1;var b=a.$$=a.jQuery.noConflict(!0),c={log:function(b){a.console&&console.log(b)},__hasProp:Object.prototype.hasOwnProperty,__extends:function(a,b){function c(){this.constructor=a}for(var d in b)e.call(b,d)&&(a[d]=b[d]);return b.prototype&&(c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype),a}},d=c.log,e=c.__hasProp,f=c.__extends,g=function(b,c){a.QUnitRunner.registerTest(b,c)},h=function(){};h.prototype.setupTests=function(){var a=this.config.globalTests||[];this.pages=[],this.pagesToTest=[],this.tests={},this.testsToLoad=[];for(var b=0,c=this.config.pages.length;c>b;b++){var d=new i(this.config.pages[b]),e=this.config.pages[b].tests||[];d.runner=this,this.pagesToTest.push(this.config.pages[b].url);for(var f=0,g=a.length;g>f;f++)d.tests.push(this.getTest(a[f]));for(var h=0,j=e.length;j>h;h++)d.tests.push(this.getTest(e[h]));this.pages.push(d)}},h.prototype.addTest=function(a){var b=this.tests[a]=new j({src:a},this);return this.testsToLoad.push(b),b},h.prototype.getTest=function(a){var b=this.tests[a]||this.addTest(a);return b},h.prototype.loadNextTest=function(){var a=this,b=this.loadingCurrentTest=this.testsToLoad.shift(),c={loadTest:function(){b.load()},finishTesting:function(){a.loadTestsDone()}};c[b?"loadTest":"finishTesting"]()},h.prototype.registerTest=function(a,b){this.loadingCurrentTest.test=b,this.loadingCurrentTest.name=a,this.loadNextTest()},h.prototype.loadTestsDone=function(){this.startTests()},h.prototype.startTests=function(){QUnit.start(),this.currentPage=this.pages.shift(),this.nextPageTest()},h.prototype.nextPageTest=function(){this.currentPage&&!this.currentPage.runNextTest()&&(this.currentPage=this.pages.shift(),this.nextPageTest())};var i=function(a,b){a=a||{},f(this,a),this.source="",this.tests=[],this.currentTest=-1,this.runner=b};i.prototype.loadSource=function(a){if(""!==this.source)return a(),void 0;var b=this;this.runner.jQuery.get(this.url).success(function(c){b.source=c,a()}).error(function(){a()})},i.prototype.runNextTest=function(){var a,b=this.tests.shift();if(b){var c=new k({},this.runner);c.testSpec=b,c.runner=this.runner,c.page=this,c.window=c.workspace=this.runner.workspace,c.$=this.runner.workspace.jQuery,c.runTest(),a=!0}else a=!1;return a};var j=function(a,b){a=a||{},f(this,a),this.runner=b};j.prototype.load=function(){this.addTestScript("",this.src)},j.prototype.addTestScript=function(a,b){b=this.runner.testsUrl+b;var c,d=document,e=d.getElementsByTagName("script")[0];c=d.createElement("script"),c.async=!0,c.src=b,e.parentNode.insertBefore(c,e)};var k=function(a){a=a||{},f(this,a),this.chain=[]};k.prototype.runTest=function(){var a=this;QUnit.module("testing "+this.page.url+" with "+this.testSpec.name),this.test.test instanceof Function?this.config.jQuery("#workspace").on("load",function(){a.testSpec.test.call(a,a.workspace.jQuery,0)}):(this.testSpec.test.setup&&this.testSpec.test.setup.call(this),this.testSpec.test.load&&a.testSpec.test.load.call(a,a.workspace.jQuery))},k.prototype.start=function(){return this._next(),this},k.prototype._next=function(){var a=this.chain.shift();a?a.call(this):this.runner.nextPageTest()},k.prototype.env=function(){var a=this.runner.config.envs,b="notfound",c=this;return this.runner.jQuery.each(a,function(d){var e=a[d];return c.runner.jQuery.each(e,function(a,e){return c.runner.workspace.location.href.indexOf(e)>=0?(b=d,!1):void 0}),"notfound"!==b?!1:void 0}),b},k.prototype.config=function(){return this.runner.config},k.prototype.loadPageSource=function(){var a=this,b=function(){a.page.loadSource(function(){a._next()})};return this.chain.push(b),this},k.prototype.loadPage=function(a){a=a||this.page.url;var b=this,c=function(){b._next(),b.runner.jQuery("#workspace").off("load",c)},d=function(){b.runner.jQuery("#workspace").on("load",c),b.runner.jQuery("#workspace").attr("src",a)};return this.chain.push(d),this},k.prototype.waitForPageLoad=function(){var a=this,b=function(){a._next(),a.runner.jQuery("#workspace").off("load",b)},c=function(){a.runner.jQuery("#workspace").on("load",b)};return this.chain.push(c),this},k.prototype.run=function(a){var b=this,c=function(){a.call(b,b.workspace.jQuery),b._next()};return this.chain.push(c),this},k.prototype.asyncRun=function(a){var b=this,c=function(){a.call(b,b.workspace.jQuery)};return this.chain.push(c),this},k.prototype.asyncRunDone=function(){this._next()},k.prototype.test=function(a,b){var c=this,d=function(){test(a,function(){b.call(c,c.workspace.jQuery)}),c._next()};return this.chain.push(d),this},k.prototype.wait=function(a){a=a||1e3;var b=function(){setTimeout(function(){this._next()},a)};return this.chain.push(b),this},k.prototype.asyncTest=function(a,b){var c=this,d=function(){asyncTest(a,function(){b.call(c,c.workspace.jQuery)})};return this.chain.push(d),this},k.prototype.asyncTestDone=function(){var a=this;QUnit.start(),a._next()},h.prototype.start=function(a){return this.config={testsDir:"/tests/",pageTests:{},globalTests:[]},f(this.config,a||{}),this.testsUrl=/^[^\/]+:\/\/[^\/]+\//.exec(location.href)[0]+this.config.testsDir,this.workspace=this.config.workspace,this.jQuery=this.config.jQuery,this.setupTests(),this.loadNextTest(),this},a.QUnitRunnerPageTest=k,a.log=d,a.registerTest=g,a.QUnitRunner=new h,b(function(){b.getJSON("config.json",function(c){a.QUnitRunner.start(b.extend({},{workspace:window.frames[0],jQuery:b},c))}).fail(function(){a.alert("Failed to load config.json, please make sure this file exist and it is correctly formatted.")})})}(this);